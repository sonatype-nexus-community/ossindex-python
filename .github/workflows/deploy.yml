#
# Copyright 2022-Present Sonatype Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy to PyPI

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPORTS_DIR: CI_reports
  DIST_DIR: dist
  DIST_ARTIFACT: python-dist
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.1.11"

jobs:
  release:
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    # limit this to being run on regular commits, not the commits that semantic-release will create
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    outputs:
      version-before: ${{ steps.before-release.outputs.version }}  # version may be empty
      released: ${{ steps.after-release.outputs.released }}  # optional bool-ish string
      version-after: ${{ steps.after-release.outputs.version  }}  # version may still be empty
    steps:
      - name: Checkout code
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # action `relekang/python-semantic-release` requires all git history
      - name: Setup python ${{ env.PYTHON_VERSION }}
        # see https://github.com/actions/setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup poetry ${{ env.POETRY_VERSION }}
        # see https://github.com/marketplace/actions/setup-poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: pre-hook
        id: before-release
        run: |
          VERSION="$(poetry version --short --no-interaction --no-ansi)"
          # version may be empty at first
          echo "::set-output name=version::$VERSION"
      - name: Python Semantic Release
        id: semantic-release
        # see https://python-semantic-release.readthedocs.io/en/latest/automatic-releases/github-actions.html
        # see https://github.com/relekang/python-semantic-release
        uses: relekang/python-semantic-release@v7.29.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
      - name: post-hook
        id: after-release
        run: |
          VERSION="$(poetry version --short --no-interaction --no-ansi)"
          # version may still be empty
          echo "::set-output name=version::$VERSION"
          if [ "$VERSION" != "$VERSION_PRE" ]
          then
            echo "::set-output name=released::true"
          fi
        env:
          VERSION_PRE: ${{ steps.before-release.outputs.version }}
      - name: Artifact python dist
        if: |
          !failure() && !cancelled() &&
          steps.after-release.outputs.released
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DIST_ARTIFACT }}
          path: ${{ env.DIST_DIR }}/
          if-no-files-found: error
          # Dist results are required for further processing.
          # Therefore, make sure that python-semantic-release is configuret to keep dist.
        # see https://python-semantic-release.readthedocs.io/en/latest/configuration.html?highlight=remove_dist#remove-dist
